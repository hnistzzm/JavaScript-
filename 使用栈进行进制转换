    class Stack {
        constructor() {
            this.items = [];
            this.count = 0;
        }
        push(element) {
            this.items[this.count] = element;
            this.count++;
        }
        isEmpty() {
            return this.count === 0;
        }
        pop() {
            if (this.isEmpty()) {
                return undefined;
            }
            this.count--;
            const result = this.items[this.count];
            delete this.items[this.count];
            return result;
        }
    }


    function baseConverter(decNumber, base) {
        const remStack = new Stack();
        const digits = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';
        let number = decNumber;
        let rem;
        let baseString = '';
        if (!base >= 2 && base <= 36) {
            return '';
        }
        //核心代码
        while (number > 0) {
            rem = Math.floor(number % base);
            remStack.push(rem);
            number = Math.floor(number / base);
        }
        while (!remStack.isEmpty()) {
            baseString += digits[remStack.pop()];

        }
        return baseString;

    }
    console.log(baseConverter(100345, 2));
